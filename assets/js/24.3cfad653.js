(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{531:function(e,v,_){"use strict";_.r(v);var o=_(62),t=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h4",{attrs:{id:"_1-什么是双向绑定"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是双向绑定"}},[e._v("#")]),e._v(" 1.什么是双向绑定？")]),e._v(" "),_("p",[e._v("可以先从单向绑定切入单向绑定非常简单，就是把"),_("code",[e._v("Model")]),e._v("绑定到"),_("code",[e._v("View")]),e._v("，当我们用"),_("code",[e._v("JavaScript")]),e._v("代码更新"),_("code",[e._v("Model")]),e._v("时，"),_("code",[e._v("View")]),e._v("就会自动更新双向绑定就很容易联想到了，在单向绑定的基础上，用户更新了"),_("code",[e._v("View")]),e._v("，"),_("code",[e._v("Model")]),e._v("的数据也自动被更新了，这种情况就是双向绑定。")]),e._v(" "),_("h4",{attrs:{id:"_2-vue实现数据双向绑定的原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-vue实现数据双向绑定的原理"}},[e._v("#")]),e._v(" 2.Vue实现数据双向绑定的原理")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("采用数据劫持结合发布者-订阅者模式的方式，通过 "),_("code",[e._v("Object.defineProperty()")]),e._v(" 来劫持各个属性的"),_("code",[e._v("setter")]),e._v("，"),_("code",[e._v("getter")]),e._v("，在数据变动时发布消息给订阅者，触发相应监听回调。")]),e._v(" "),_("p",[e._v("当把一个普通 "),_("code",[e._v("Javascript")]),e._v(" 对象传给 Vue 实例来作为它的 "),_("code",[e._v("data")]),e._v(" 选项时，Vue 将遍历它的属性，用 "),_("code",[e._v("Object.defineProperty()")]),e._v(" 将它们转为 "),_("code",[e._v("getter/setter")]),e._v("。用户看不到 "),_("code",[e._v("getter/setter")]),e._v("，但是在内部它们让 "),_("code",[e._v("Vue")]),e._v("追踪依赖，在属性被访问和修改时通知变化。")])]),e._v(" "),_("li",[_("p",[e._v("Vue的数据双向绑定 将"),_("code",[e._v("MVVM")]),e._v("作为数据绑定的入口，整合"),_("code",[e._v("Observer")]),e._v("，"),_("code",[e._v("Compile")]),e._v("和"),_("code",[e._v("Watcher")]),e._v("三者，通过"),_("code",[e._v("Observer")]),e._v("来监听自己的"),_("code",[e._v("model")]),e._v("的数据变化，通过"),_("code",[e._v("Compile")]),e._v("来解析编译模板指令（"),_("code",[e._v("Vue")]),e._v("中是用来解析 "),_("code",[e._v("{{}}")]),e._v("），最终利用"),_("code",[e._v("watcher")]),e._v("搭起"),_("code",[e._v("observer")]),e._v("和"),_("code",[e._v("Compile")]),e._v("之间的通信桥梁，达到数据变化 —>视图更新；视图交互变化（"),_("code",[e._v("input")]),e._v("）—>数据"),_("code",[e._v("model")]),e._v("变更双向绑定效果。")])])])])}),[],!1,null,null,null);v.default=t.exports}}]);