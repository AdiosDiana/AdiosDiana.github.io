(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{529:function(e,t,s){"use strict";s.r(t);var r=s(62),u=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[s("strong",[e._v("Vue与React的区别")])]),e._v(" "),s("ul",[s("li",[e._v("vue组件分为全局注册和局部注册，在react中都是通过import相应组件，然后模版中引用；")]),e._v(" "),s("li",[e._v("props是可以动态变化的，子组件也实时更新，在react中官方建议props要像纯函数那样，输入输出一致对应，而且不太建议通过props来更改视图；")]),e._v(" "),s("li",[e._v("子组件一般要显示地调用props选项来声明它期待获得的数据。而在react中不必需，另两者都有props校验机制；")]),e._v(" "),s("li",[e._v("每个Vue实例都实现了事件接口，方便父子组件通信，小型项目中不需要引入状态管理机制，而react必需自己实现；")]),e._v(" "),s("li",[e._v("使用插槽分发内容，使得可以混合父组件的内容与子组件自己的模板；")]),e._v(" "),s("li",[e._v("多了指令系统，让模版可以实现更丰富的功能，而React只能使用JSX语法；")]),e._v(" "),s("li",[e._v("Vue增加的语法糖computed和watch，而在React中需要自己写一套逻辑来实现；")]),e._v(" "),s("li",[e._v("react的思路是all in js，通过js来生成html，所以设计了jsx，还有通过js来操作css，社区的styled-component、jss等；而 vue是把html，css，js组合到一起，用各自的处理方式，vue有单文件组件，可以把html、css、js写到一个文件中，html提供了模板引擎来处理。")]),e._v(" "),s("li",[e._v("react做的事情很少，很多都交给社区去做，vue很多东西都是内置的，写起来确实方便一些， 比如 redux的combineReducer就对应vuex的modules， 比如reselect就对应vuex的getter和vue组件的computed， vuex的mutation是直接改变的原始数据，而redux的reducer是返回一个全新的state，所以redux结合immutable来优化性能，vue不需要。")]),e._v(" "),s("li",[e._v("react是整体的思路的就是函数式，所以推崇纯组件，数据不可变，单向数据流，当然需要双向的地方也可以做到，比如结合redux-form，组件的横向拆分一般是通过高阶组件。而vue是数据可变的，双向绑定，声明式的写法，vue组件的横向拆分很多情况下用mixin")])])])}),[],!1,null,null,null);t.default=u.exports}}]);