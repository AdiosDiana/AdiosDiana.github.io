(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{517:function(e,o,v){"use strict";v.r(o);var _=v(62),c=Object(_.a)({},(function(){var e=this,o=e.$createElement,v=e._self._c||o;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("ul",[v("li",[e._v("画布("),v("code",[e._v("Canvas")]),e._v(") API")]),e._v(" "),v("li",[e._v("地理("),v("code",[e._v("Geolocation")]),e._v(") API")]),e._v(" "),v("li",[e._v("音频、视频API("),v("code",[e._v("audio")]),e._v(","),v("code",[e._v("video")]),e._v(")")]),e._v(" "),v("li",[v("code",[e._v("localStorage")]),e._v("和"),v("code",[e._v("sessionStorage")])]),e._v(" "),v("li",[v("code",[e._v("webworker")]),e._v(", "),v("code",[e._v("websocket")])]),e._v(" "),v("li",[e._v("新的一套标签 "),v("code",[e._v("header")]),e._v(","),v("code",[e._v("nav")]),e._v(","),v("code",[e._v("footer")]),e._v(","),v("code",[e._v("aside")]),e._v(","),v("code",[e._v("article")]),e._v(","),v("code",[e._v("section")])]),e._v(" "),v("li",[v("code",[e._v("web worker")]),e._v("是运行在浏览器后台的js程序，他不影响主程序的运行，是另开的一个js线程，可以用这个线程执行复杂的数据操作，然后把操作结果通过postMessage传递给主线程，这样在进行复杂且耗时的操作时就不会阻塞主线程了。")]),e._v(" "),v("li",[v("code",[e._v("HTML5 History")]),e._v("两个新增的API："),v("code",[e._v("history.pushState")]),e._v(" 和 "),v("code",[e._v("history.replaceState")]),e._v("，两个 API 都会操作浏览器的历史记录，而不会引起页面的刷新。\n"),v("ul",[v("li",[v("code",[e._v("WebSocket")]),e._v(" 使用"),v("code",[e._v("ws")]),e._v("或"),v("code",[e._v("wss")]),e._v("协议，"),v("code",[e._v("Websocket")]),e._v("是一个持久化的协议，相对于HTTP这种非持久的协议来说。WebSocket API最伟大之处在于服务器和客户端可以在给定的时间范围内的任意时刻，相互推送信息。"),v("code",[e._v("WebSocket")]),e._v("并不限于以Ajax(或XHR)方式通信，因为Ajax技术需要客户端发起请求，而WebSocket服务器和客户端可以彼此相互推送信息；XHR受到域的限制，而"),v("code",[e._v("WebSocket")]),e._v("允许跨域通信")])])])])])}),[],!1,null,null,null);o.default=c.exports}}]);